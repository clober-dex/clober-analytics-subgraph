type Book @entity {
  # bookId
  id: ID!
  # quote token
  quote: Token!
  # unit size
  unitSize: BigInt!
}

type Transaction @entity {
  # txn hash
  id: ID!
  # block txn was included in
  blockNumber: BigInt!
  # timestamp txn was confirmed
  timestamp: BigInt!
  # gas used during txn execution
  gasPrice: BigInt!
}

type Token @entity {
  # token address
  id: ID!
  # token symbol
  symbol: String!
  # token name
  name: String!
  # token decimals
  decimals: BigInt!
}

type CloberDayData @entity {
  # timestamp rounded to current day by dividing by 86400
  id: ID!
  # timestamp rounded to current day by dividing by 86400
  date: BigInt!
  # number of daily transactions
  txCount: BigInt!
  # number of daily wallets
  walletCount: BigInt!

  tokenVolumes: [CloberTokenDayVolume!]! @derivedFrom(field: "cloberDayData")
}

type CloberTokenDayVolume @entity {
  # ${timestamp rounded to current day by dividing by 86400}-${token.id}
  id: ID!
  # timestamp rounded to current day by dividing by 86400
  date: BigInt!

  cloberDayData: CloberDayData!
  # token
  token: Token!
  # volume in token
  volume: BigDecimal!
}

type WalletDayData @entity {
  # ${wallet}-{timestamp rounded to current day by dividing by 86400}
  id: ID!
  # timestamp rounded to current day by dividing by 86400
  date: BigInt!
  # number of daily transactions
  txCount: BigInt!
  # wallet address
  wallet: Bytes!

  tokenVolumes: [WalletTokenDayVolume!]! @derivedFrom(field: "walletDayData")
}

type WalletTokenDayVolume @entity {
  # ${wallet}-{timestamp rounded to current day by dividing by 86400}-${token.id}
  id: ID!
  # timestamp rounded to current day by dividing by 86400
  date: BigInt!

  walletDayData: WalletDayData!
  # token
  token: Token!
  # volume in token
  volume: BigDecimal!
}